// Mocks generated by Mockito 5.2.0 from annotations
// in zac/test/helper.dart.
// Do not manually edit this file.

import 'package:flutter/material.dart' as _i3;
import 'package:hooks_riverpod/hooks_riverpod.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;
import 'package:zac/src/zac/interactions.dart' as _i5;
import 'package:zac/src/zac/misc.dart' as _i6;
import 'package:zac/src/zac/transformers.dart' as _i8;
import 'package:zac/src/zac/update_context.dart' as _i7;

import 'helper.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

/// A class which mocks [LeakedActionCb].
///
/// See the documentation for Mockito's code generation for more information.
class MockLeakedActionCb extends _i1.Mock implements _i2.LeakedActionCb {
  MockLeakedActionCb() {
    _i1.throwOnMissingStub(this);
  }

  @override
  void call(_i3.BuildContext? context, _i4.WidgetRef? ref,
          _i5.ZacInteractionLifetime? lifetime, _i6.ContextBag? bag) =>
      super.noSuchMethod(
          Invocation.method(#call, [context, ref, lifetime, bag]),
          returnValueForMissingStub: null);
}

/// A class which mocks [LeakBagCb].
///
/// See the documentation for Mockito's code generation for more information.
class MockLeakBagCb extends _i1.Mock implements _i2.LeakBagCb {
  MockLeakBagCb() {
    _i1.throwOnMissingStub(this);
  }

  @override
  void call(Map<String, dynamic>? bag) =>
      super.noSuchMethod(Invocation.method(#call, [bag]),
          returnValueForMissingStub: null);
}

/// A class which mocks [LeakeContextCb].
///
/// See the documentation for Mockito's code generation for more information.
class MockLeakeContextCb extends _i1.Mock implements _i2.LeakeContextCb {
  MockLeakeContextCb() {
    _i1.throwOnMissingStub(this);
  }

  @override
  void call(_i7.ZacBuildContext? context) =>
      super.noSuchMethod(Invocation.method(#call, [context]),
          returnValueForMissingStub: null);
}

/// A class which mocks [LeakBagTransformer].
///
/// See the documentation for Mockito's code generation for more information.
class MockLeakBagTransformer extends _i1.Mock
    implements _i2.LeakBagTransformer {
  MockLeakBagTransformer() {
    _i1.throwOnMissingStub(this);
  }

  @override
  void Function(Map<String, dynamic>) get cb =>
      (super.noSuchMethod(Invocation.getter(#cb),
              returnValue: (Map<String, dynamic> bag) {})
          as void Function(Map<String, dynamic>));
  @override
  Object? call(_i8.ZacTransformValue? transformValue, _i6.ZacRef? ref,
          _i6.ContextBag? bag) =>
      (super.noSuchMethod(Invocation.method(#call, [transformValue, ref, bag]))
          as Object?);
  @override
  Object? transform(_i8.ZacTransformValue? transformValue, _i6.ZacRef? ref,
          _i6.ContextBag? bag) =>
      (super.noSuchMethod(
              Invocation.method(#transform, [transformValue, ref, bag]))
          as Object?);
}

/// A class which mocks [TransformerCb].
///
/// See the documentation for Mockito's code generation for more information.
class MockTransformerCb extends _i1.Mock implements _i2.TransformerCb {
  MockTransformerCb() {
    _i1.throwOnMissingStub(this);
  }

  @override
  Object? call(_i8.ZacTransformValue? transformValue,
          _i7.ZacBuildContext? context, _i6.ContextBag? bag) =>
      (super.noSuchMethod(
          Invocation.method(#call, [transformValue, context, bag])) as Object?);
  @override
  Object? transform(_i8.ZacTransformValue? transformValue, _i6.ZacRef? ref,
          _i6.ContextBag? bag) =>
      (super.noSuchMethod(
              Invocation.method(#transform, [transformValue, ref, bag]))
          as Object?);
}
